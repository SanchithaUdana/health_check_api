name: Deploy to AWS EC2

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        run: docker build -t flask-app .

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Log in to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Push Docker image to ECR
        run: |
          docker tag flask-app:latest 881490108954.dkr.ecr.us-east-1.amazonaws.com/flask-api-images:latest
          docker push 881490108954.dkr.ecr.us-east-1.amazonaws.com/flask-api-images:latest
          

      - name: Save SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/ec2_key.pem
          chmod 600 ~/.ssh/ec2_key.pem

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/ec2_key.pem ubuntu@${{ secrets.EC2_IP }}"
            # Log in to ECR
            aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin <aws_account_id>.dkr.ecr.us-east-1.amazonaws.com
      
            # Pull the Docker image
            docker pull 881490108954.dkr.ecr.us-east-1.amazonaws.com/flask-api-images:latest
      
            # Stop and remove the existing container (if any)
            docker stop flask-app || true
            docker rm flask-app || true
      
            # Run the new container
            docker run -d -p 5000:5000 --name flask-app 881490108954.dkr.ecr.us-east-1.amazonaws.com/flask-api-images:latest
          "
